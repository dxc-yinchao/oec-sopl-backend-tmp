runtime:
   environment: local

spring: 
   profiles:
      active: dev
  
  
   application:
      name: SOPL

   datasource:
#      url: jdbc:postgresql://localhost:5432/postgres
#      username: sopl
#      password: sopl

      sopl:
         url: jdbc:postgresql://localhost:5432/postgres
         jdbc-url: jdbc:postgresql://localhost:5432/postgres
         username: sopl
         password: sopl
         driver-class-name: org.postgresql.Driver
         hikari:
            connectionTimeout: 30000
            idleTimeout: 600000
            maxLifetime: 1800000

      cargowise:
         url: jdbc:sqlserver://localhost:1433;databaseName=OdysseyOECAST;encrypt=true;trustServerCertificate=true;
         jdbc-url: jdbc:sqlserver://localhost:1433;databaseName=OdysseyOECAST;encrypt=true;trustServerCertificate=true;
         username: sa
         password: yourStrong(!)Password
         driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
         hikari:
            connectionTimeout: 30000
            idleTimeout: 600000
            maxLifetime: 1800000

   mvc:
      pathmatch:
         matching-strategy: "ANT_PATH_MATCHER"
   jpa:
      properties:
         hibernate:
            pg-dialect: org.hibernate.dialect.PostgreSQLDialect
            temp:
               use_jdbc_metadata_defaults: 'false'
            mssql-dialect: org.hibernate.dialect.SQLServerDialect
#spring.mvc.pathmatch.matching-strategy=ant_path_matcher

   security:
      cors:
         allowed-origins: 
            "*"
         allowed-methods:
            GET,
            POST,
            OPTIONS
      ignore-all-security-check: true
      ignore-all-security-check-ips: 
            127.0.0.1
      ignore-security-check-uri-list:
            /v2/**,
            /webjars/**,
            /swagger-ui/**,
            /swagger-resources/**

server:
   type: ap
   servlet: 
      context-path: /${spring.application.name}
      session:
         timeout: 660
         tracking-modes: COOKIE
         cookie:
            http-only: true
            secure : false
   port: 8080
   compression:
      enabled: true

keycloak:
  # 表示是一個public的client
  public-client: true
  # keycloak的地址
  auth-server-url: http://localhost:8180/auth
  # keycloak中的realm
  realm: SpringBootKeycloak
  # client ID
  resource: login-app
  bearer-only: true
  use-resource-role-mappings: true

logging:
  file:
    name: logs/dev.log
  pattern:
    console: "%d %-5level %logger : %msg%n"
    file: "%d %-5level [%thread] %logger : %msg%n"
  level: 
    org.springframework.web: INFO
    guru.springframework.controllers: INFO
    org.hibernate: INFO
